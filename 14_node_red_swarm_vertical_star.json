[
    {
        "id": "396dbe45.78fc92",
        "type": "tab",
        "label": "Swarm Vertical Star with Multiple Tello EDUs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ad234727.7ee378",
        "type": "template",
        "z": "396dbe45.78fc92",
        "name": "Left Vertical Star Mission",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "command\ntakeoff\ngo 0 45 90 50\ngo 0 45 -90 50\ngo 0 -90 45 50\ngo 0 90 0 50\ngo 0 -90 -45 50\nflip f\nland",
        "output": "str",
        "x": 293.25,
        "y": 85.00000810623169,
        "wires": [
            [
                "3c5f75ef.5ca46a"
            ]
        ]
    },
    {
        "id": "417aadd7.c13b44",
        "type": "udp in",
        "z": "396dbe45.78fc92",
        "name": "",
        "iface": "",
        "port": "8889",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 253,
        "y": 211,
        "wires": [
            [
                "f92a3c8.86eb6c",
                "dcdca693.0d76e8"
            ]
        ]
    },
    {
        "id": "f92a3c8.86eb6c",
        "type": "switch",
        "z": "396dbe45.78fc92",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 405,
        "y": 245,
        "wires": [
            [
                "ce99902c.da238"
            ],
            [
                "d75f0133.96f1a"
            ]
        ]
    },
    {
        "id": "d75f0133.96f1a",
        "type": "debug",
        "z": "396dbe45.78fc92",
        "name": "Display errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 537.5,
        "y": 312,
        "wires": []
    },
    {
        "id": "ce99902c.da238",
        "type": "delay",
        "z": "396dbe45.78fc92",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 551,
        "y": 239,
        "wires": [
            [
                "76e3aade.d38a74"
            ]
        ]
    },
    {
        "id": "76e3aade.d38a74",
        "type": "function",
        "z": "396dbe45.78fc92",
        "name": "Ready",
        "func": "msg.ready = true;\n\n// This will route messages to Tello EDU #1\nif (msg.ip === '192.168.0.100') {\n    return [msg, null];\n// This will route messages to Tello EDU #2\n} else if (msg.ip === '192.168.0.102') {\n    return [null, msg];\n} else {\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 708,
        "y": 239,
        "wires": [
            [
                "fc824e89.f3ce6"
            ],
            [
                "28283573.830c0a"
            ]
        ]
    },
    {
        "id": "fc824e89.f3ce6",
        "type": "function",
        "z": "396dbe45.78fc92",
        "name": "Command queue",
        "func": "// Use a message queue to handle this mission\nvar queue = context.get(\"queue\") || [];\nvar busy = context.get(\"busy\") || false;\n\n// Ready for processing next command\nif (msg.hasOwnProperty(\"ready\")) {\n    if (queue.length > 0) {\n        var message = queue.shift();\n        msg.payload = message.command;\n        return msg;\n    } else {\n        context.set(\"busy\", false);\n    }\n// This happens the first time the node is processed\n} else {\n    // This builds up the command queue\n    if (busy) {\n        queue.push(msg.payload);\n        context.set(\"queue\", queue);\n    // When the command queue is done building we pass the message to the next node and begin the mission\n    } else {\n        context.set(\"busy\", true);\n        msg.payload = msg.payload.command;\n        return msg;\n    }\n}\n\n// We only want messages to be passed based on the logic above\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 785,
        "y": 86,
        "wires": [
            [
                "62e521d1.a61bf"
            ]
        ]
    },
    {
        "id": "62e521d1.a61bf",
        "type": "udp out",
        "z": "396dbe45.78fc92",
        "name": "Tello EDU #1",
        "addr": "192.168.0.100",
        "iface": "",
        "port": "8889",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 967,
        "y": 218,
        "wires": []
    },
    {
        "id": "a9f6b06f.79298",
        "type": "inject",
        "z": "396dbe45.78fc92",
        "name": "Launch!",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 93.5,
        "y": 224.0000033378601,
        "wires": [
            [
                "43821d46.bffa74",
                "ad234727.7ee378"
            ]
        ]
    },
    {
        "id": "3c5f75ef.5ca46a",
        "type": "csv",
        "z": "396dbe45.78fc92",
        "name": "Split commands",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "command",
        "skip": "0",
        "x": 536,
        "y": 86,
        "wires": [
            [
                "fc824e89.f3ce6"
            ]
        ]
    },
    {
        "id": "dcdca693.0d76e8",
        "type": "debug",
        "z": "396dbe45.78fc92",
        "name": "Display message object",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 464.5,
        "y": 154,
        "wires": []
    },
    {
        "id": "43821d46.bffa74",
        "type": "template",
        "z": "396dbe45.78fc92",
        "name": "Right Vertical Star Mission",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "command\ntakeoff\ngo 0 -45 90 50\ngo 0 -45 -90 50\ngo 0 90 45 50\ngo 0 -90 0 50\ngo 0 90 -45 50\nflip f\nland",
        "output": "str",
        "x": 292.5,
        "y": 391.75000858306885,
        "wires": [
            [
                "d2fffa9b.6f1de8"
            ]
        ]
    },
    {
        "id": "d2fffa9b.6f1de8",
        "type": "csv",
        "z": "396dbe45.78fc92",
        "name": "Split commands",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "command",
        "skip": "0",
        "x": 538,
        "y": 392,
        "wires": [
            [
                "28283573.830c0a"
            ]
        ]
    },
    {
        "id": "28283573.830c0a",
        "type": "function",
        "z": "396dbe45.78fc92",
        "name": "Command queue",
        "func": "// Use a message queue to handle this mission\nvar queue = context.get(\"queue\") || [];\nvar busy = context.get(\"busy\") || false;\n\n// Ready for processing next command\nif (msg.hasOwnProperty(\"ready\")) {\n    if (queue.length > 0) {\n        var message = queue.shift();\n        msg.payload = message.command;\n        return msg;\n    } else {\n        context.set(\"busy\", false);\n    }\n// This happens the first time the node is processed\n} else {\n    // This builds up the command queue\n    if (busy) {\n        queue.push(msg.payload);\n        context.set(\"queue\", queue);\n    // When the command queue is done building we pass the message to the next node and begin the mission\n    } else {\n        context.set(\"busy\", true);\n        msg.payload = msg.payload.command;\n        return msg;\n    }\n}\n\n// We only want messages to be passed based on the logic above\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 771,
        "y": 391,
        "wires": [
            [
                "8475c2fd.c06b2"
            ]
        ]
    },
    {
        "id": "8475c2fd.c06b2",
        "type": "udp out",
        "z": "396dbe45.78fc92",
        "name": "Tello EDU #2",
        "addr": "192.168.0.102",
        "iface": "",
        "port": "8889",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 967,
        "y": 270,
        "wires": []
    }
]