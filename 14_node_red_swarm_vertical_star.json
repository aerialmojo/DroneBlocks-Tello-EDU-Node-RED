[
    {
        "id": "f958b23e.9b5e4",
        "type": "tab",
        "label": "Swarm Vertical Star with Multiple Tello EDUs",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66b3251b.e1516c",
        "type": "template",
        "z": "f958b23e.9b5e4",
        "name": "Left Vertical Star Mission",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "command\ntakeoff\ngo 0 60 120 25\ngo 0 60 -120 25\ngo 0 -120 60 25\ngo 0 120 0 25\ngo 0 -120 -60 25\nflip f\nland",
        "output": "str",
        "x": 289.5,
        "y": 85,
        "wires": [
            [
                "e31c038.4fe4c"
            ]
        ]
    },
    {
        "id": "9b428b10.75bcb8",
        "type": "udp in",
        "z": "f958b23e.9b5e4",
        "name": "",
        "iface": "",
        "port": "9000",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 253,
        "y": 211,
        "wires": [
            [
                "2b11ab0d.154f14",
                "c9c26072.2998e"
            ]
        ]
    },
    {
        "id": "2b11ab0d.154f14",
        "type": "switch",
        "z": "f958b23e.9b5e4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 405,
        "y": 245,
        "wires": [
            [
                "25ab448a.e0162c"
            ],
            [
                "a3163f47.43831"
            ]
        ]
    },
    {
        "id": "a3163f47.43831",
        "type": "debug",
        "z": "f958b23e.9b5e4",
        "name": "Display errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 537.5,
        "y": 312,
        "wires": []
    },
    {
        "id": "25ab448a.e0162c",
        "type": "delay",
        "z": "f958b23e.9b5e4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 551,
        "y": 239,
        "wires": [
            [
                "b083b4cb.725cf8"
            ]
        ]
    },
    {
        "id": "b083b4cb.725cf8",
        "type": "function",
        "z": "f958b23e.9b5e4",
        "name": "Ready",
        "func": "msg.ready = true;\n\n// This will route messages to Tello EDU #1\nif (msg.ip === '127.0.0.1') {\n    return [msg, null];\n// This will route messages to Tello EDU #2\n} else if (msg.ip === '192.168.86.27') {\n    return [null, msg];\n} else {\n    return null;\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 708,
        "y": 239,
        "wires": [
            [
                "84e984fd.98e6a8"
            ],
            [
                "76af9d61.f17b74"
            ]
        ]
    },
    {
        "id": "84e984fd.98e6a8",
        "type": "function",
        "z": "f958b23e.9b5e4",
        "name": "Command queue",
        "func": "// Use a message queue to handle this mission\nvar queue = context.get(\"queue\") || [];\nvar busy = context.get(\"busy\") || false;\n\n// Ready for processing next command\nif (msg.hasOwnProperty(\"ready\")) {\n    if (queue.length > 0) {\n        var message = queue.shift();\n        msg.payload = message.command;\n        return msg;\n    } else {\n        context.set(\"busy\", false);\n    }\n// This happens the first time the node is processed\n} else {\n    // This builds up the command queue\n    if (busy) {\n        queue.push(msg.payload);\n        context.set(\"queue\", queue);\n    // When the command queue is done building we pass the message to the next node and begin the mission\n    } else {\n        context.set(\"busy\", true);\n        msg.payload = msg.payload.command;\n        return msg;\n    }\n}\n\n// We only want messages to be passed based on the logic above\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 785,
        "y": 86,
        "wires": [
            [
                "1ab9b129.ca95af"
            ]
        ]
    },
    {
        "id": "1ab9b129.ca95af",
        "type": "udp out",
        "z": "f958b23e.9b5e4",
        "name": "Tello EDU #1",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "8889",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 967,
        "y": 218,
        "wires": []
    },
    {
        "id": "90030c2c.1cc8e",
        "type": "inject",
        "z": "f958b23e.9b5e4",
        "name": "Launch!",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 96,
        "y": 224,
        "wires": [
            [
                "66b3251b.e1516c",
                "d7205aad.bb0b98"
            ]
        ]
    },
    {
        "id": "e31c038.4fe4c",
        "type": "csv",
        "z": "f958b23e.9b5e4",
        "name": "Split commands",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "command",
        "skip": "0",
        "x": 536,
        "y": 86,
        "wires": [
            [
                "84e984fd.98e6a8"
            ]
        ]
    },
    {
        "id": "c9c26072.2998e",
        "type": "debug",
        "z": "f958b23e.9b5e4",
        "name": "Display message object",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 464.5,
        "y": 154,
        "wires": []
    },
    {
        "id": "d7205aad.bb0b98",
        "type": "template",
        "z": "f958b23e.9b5e4",
        "name": "Right Vertical Star Mission",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "command\ntakeoff\ngo 0 60 120 25\ngo 0 60 -120 25\ngo 0 -120 60 25\ngo 0 120 0 25\ngo 0 -120 -60 25\nflip f\nland",
        "output": "str",
        "x": 295,
        "y": 393,
        "wires": [
            [
                "a22dc767.fb2bd8"
            ]
        ]
    },
    {
        "id": "a22dc767.fb2bd8",
        "type": "csv",
        "z": "f958b23e.9b5e4",
        "name": "Split commands",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "command",
        "skip": "0",
        "x": 538,
        "y": 392,
        "wires": [
            [
                "76af9d61.f17b74"
            ]
        ]
    },
    {
        "id": "76af9d61.f17b74",
        "type": "function",
        "z": "f958b23e.9b5e4",
        "name": "Command queue",
        "func": "// Use a message queue to handle this mission\nvar queue = context.get(\"queue\") || [];\nvar busy = context.get(\"busy\") || false;\n\n// Ready for processing next command\nif (msg.hasOwnProperty(\"ready\")) {\n    if (queue.length > 0) {\n        var message = queue.shift();\n        msg.payload = message.command;\n        return msg;\n    } else {\n        context.set(\"busy\", false);\n    }\n// This happens the first time the node is processed\n} else {\n    // This builds up the command queue\n    if (busy) {\n        queue.push(msg.payload);\n        context.set(\"queue\", queue);\n    // When the command queue is done building we pass the message to the next node and begin the mission\n    } else {\n        context.set(\"busy\", true);\n        msg.payload = msg.payload.command;\n        return msg;\n    }\n}\n\n// We only want messages to be passed based on the logic above\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 771,
        "y": 391,
        "wires": [
            [
                "7b15a4e4.0402dc"
            ]
        ]
    },
    {
        "id": "7b15a4e4.0402dc",
        "type": "udp out",
        "z": "f958b23e.9b5e4",
        "name": "Tello EDU #2",
        "addr": "127.0.0.1",
        "iface": "",
        "port": "8889",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 967,
        "y": 270,
        "wires": []
    }
]